{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["                 ** FRAUD DETECTION ON BANK PAYMENTS**\n","                 *** Introduction***\n","\n","  Fraud detection is crucial for any lending or borrowing financial institutions.\n","  With fraud detection one is able to detect any abuse and protect client information.\n","  Fraud detction is a very important aspect of risk anaylsis and can help gauge the overall strength of the financial institution's cyber security.  \n","  With this dataset we shall show how to  detect the fraudelent bank transactions and how they mask themselves as a non fraudelent transaction.\n","\n","  The dataset used was gotten from the PwC global economic crime survey of 2018 which found out that half of the companies surveyed have experienced some form of fraud.\n","  Various machine learning models/algorithms were used to assist in the detection of these fraudulent activities as some transactions mask themselves as non-fraudulent.\n","\n","  We shall be using the following kernels:\n","  1.EDA\n","  2.Data pre-processing\n","  3.Oversampling with SMOTE\n","  4.Building of the models:K-Neighbour Classifier, Random Forest Classifier.\n","  5.Conclusion\n","\n"," Classification of the dataset\n","\n","---\n","\n","\n","Data: As shown in the first rows below the dataset has 9 feature columns and a target column. The feature columms are :\n","\n","Step: This feature represents the day from the start of simulation. It has 180 steps so simulation ran for virtually 6 months.\n","Customer: This feature represents the customer id\n","zipCodeOrigin: The zip code of origin/source.\n","Merchant: The merchant's id\n","zipMerchant: The merchant's zip code\n","Age: Categorized age\n","0: <= 18,\n","1: 19-25,\n","2: 26-35,\n","3: 36-45,\n","4: 46:55,\n","5: 56:65,\n","6: > 65\n","U: Unknown\n","Gender: Gender for customer\n","E : Enterprise,\n","F: Female,\n","M: Male,\n","U: Unknown\n","Category: Category of the purchase.\n","Amount: Amount of the purchase\n","Fraud: Target variable which shows if the transaction fraudulent(1) or benign/non-fraudelent(0).\n","\n","\n","\n","\n","\n","\n","\n"],"metadata":{"id":"kJST9tO2336G"}},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","from sklearn.metrics import classification_report\n","from sklearn.metrics import confusion_matrix\n","from sklearn.tree import DecisionTreeClassifier\n","from sklearn.model_selection import train_test_split\n","from sklearn.preprocessing import StandardScaler\n","from sklearn.ensemble import RandomForestClassifier"],"metadata":{"id":"YPj07dxFMv6b"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"A4ZcB-_dJDm_"},"outputs":[],"source":["data = pd.read_csv('/content/frauddetectionpayments.csv.zip')"]},{"cell_type":"code","source":["data.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"i3LnEaz0POVz","executionInfo":{"status":"ok","timestamp":1729205842207,"user_tz":240,"elapsed":199,"user":{"displayName":"Ian","userId":"01994031237803856669"}},"outputId":"faedd638-f45a-47ed-9a9d-b7484a8df126"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                step         amount          fraud\n","count  594643.000000  594643.000000  594643.000000\n","mean       94.986827      37.890135       0.012108\n","std        51.053632     111.402831       0.109369\n","min         0.000000       0.000000       0.000000\n","25%        52.000000      13.740000       0.000000\n","50%        97.000000      26.900000       0.000000\n","75%       139.000000      42.540000       0.000000\n","max       179.000000    8329.960000       1.000000"],"text/html":["\n","  <div id=\"df-87af9f37-1f30-4291-9b2b-a420a7cb3c93\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>step</th>\n","      <th>amount</th>\n","      <th>fraud</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>594643.000000</td>\n","      <td>594643.000000</td>\n","      <td>594643.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>94.986827</td>\n","      <td>37.890135</td>\n","      <td>0.012108</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>51.053632</td>\n","      <td>111.402831</td>\n","      <td>0.109369</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>52.000000</td>\n","      <td>13.740000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>97.000000</td>\n","      <td>26.900000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>139.000000</td>\n","      <td>42.540000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>179.000000</td>\n","      <td>8329.960000</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-87af9f37-1f30-4291-9b2b-a420a7cb3c93')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-87af9f37-1f30-4291-9b2b-a420a7cb3c93 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-87af9f37-1f30-4291-9b2b-a420a7cb3c93');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-aa2baf3e-11e8-4ce2-ab4c-d7e432a856c8\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-aa2baf3e-11e8-4ce2-ab4c-d7e432a856c8')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-aa2baf3e-11e8-4ce2-ab4c-d7e432a856c8 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"data\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"step\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 210207.09290061233,\n        \"min\": 0.0,\n        \"max\": 594643.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          94.98682739055198,\n          97.0,\n          594643.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"amount\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 209825.64290923122,\n        \"min\": 0.0,\n        \"max\": 594643.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          37.89013530807561,\n          26.9,\n          594643.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"fraud\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 210237.99219970498,\n        \"min\": 0.0,\n        \"max\": 594643.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.012108105199254007,\n          1.0,\n          0.10936873000608975\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["data.isna().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":397},"id":"T4chEDXMPuv5","executionInfo":{"status":"ok","timestamp":1729205845942,"user_tz":240,"elapsed":395,"user":{"displayName":"Ian","userId":"01994031237803856669"}},"outputId":"1d283886-f693-4b68-dcfb-99a06df7f7be"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["step           0\n","customer       0\n","age            0\n","gender         0\n","zipcodeOri     0\n","merchant       0\n","zipMerchant    0\n","category       0\n","amount         0\n","fraud          0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>step</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>customer</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>age</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>gender</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>zipcodeOri</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>merchant</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>zipMerchant</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>category</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>amount</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>fraud</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":4}]},{"cell_type":"markdown","source":["This shows that there are no blank or null values in the dataset.\n","This is good for us as we won't have to drop any columns or rows."],"metadata":{"id":"3P-XVSv0L7qu"}},{"cell_type":"code","source":["data.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BhpfAgdSQGre","executionInfo":{"status":"ok","timestamp":1729205849463,"user_tz":240,"elapsed":190,"user":{"displayName":"Ian","userId":"01994031237803856669"}},"outputId":"c739ff6f-6ebe-40a4-e59c-9e85617bff8e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 594643 entries, 0 to 594642\n","Data columns (total 10 columns):\n"," #   Column       Non-Null Count   Dtype  \n","---  ------       --------------   -----  \n"," 0   step         594643 non-null  int64  \n"," 1   customer     594643 non-null  object \n"," 2   age          594643 non-null  object \n"," 3   gender       594643 non-null  object \n"," 4   zipcodeOri   594643 non-null  object \n"," 5   merchant     594643 non-null  object \n"," 6   zipMerchant  594643 non-null  object \n"," 7   category     594643 non-null  object \n"," 8   amount       594643 non-null  float64\n"," 9   fraud        594643 non-null  int64  \n","dtypes: float64(1), int64(2), object(7)\n","memory usage: 45.4+ MB\n"]}]},{"cell_type":"code","source":["data.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"e6in6tpiQZu7","executionInfo":{"status":"ok","timestamp":1729205852226,"user_tz":240,"elapsed":175,"user":{"displayName":"Ian","userId":"01994031237803856669"}},"outputId":"3f577d75-51ab-4744-b0e4-0a906157a697"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['step', 'customer', 'age', 'gender', 'zipcodeOri', 'merchant',\n","       'zipMerchant', 'category', 'amount', 'fraud'],\n","      dtype='object')"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["LABELS = [\"Non-Fraud\", \"Fraud\"]\n","\n","count_classes = pd.value_counts(data['fraud'], sort = True)\n","count_classes.plot(kind = 'bar', rot=0)\n","plt.title(\"Transaction Class Distribution\")\n","plt.xticks(range(2), LABELS)\n","plt.xlabel(\"Class\")\n","plt.ylabel(\"Frequency\");"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":527},"id":"0o1GR-lLRBPc","executionInfo":{"status":"ok","timestamp":1729205854666,"user_tz":240,"elapsed":626,"user":{"displayName":"Ian","userId":"01994031237803856669"}},"outputId":"bd31c0f9-e378-4296-fc73-0c6c09c93f25"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-7-4c098cc57848>:3: FutureWarning: pandas.value_counts is deprecated and will be removed in a future version. Use pd.Series(obj).value_counts() instead.\n","  count_classes = pd.value_counts(data['fraud'], sort = True)\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["The fraud data is be imbalanced as seen in the plot above and from the count of instances. To balance the dataset we will perform an oversampling technique. Oversampling is increasing the number of the minority class by generating instances from the minority class.This operation might have some risks as it will create copies or similar data points which sometimes would not be helpful for the case of fraud detection because fraudulent transactions may vary. We will perform an oversampled technique called SMOTE (Synthetic Minority Over-sampling Technique). SMOTE will create new data points from the minority class using the neighbour instances so that the generated samples are not exact copies but they are similar to instances we have."],"metadata":{"id":"Xndre52oMde-"}},{"cell_type":"code","source":["data['fraud'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":178},"id":"iDQUWamfT44j","executionInfo":{"status":"ok","timestamp":1729205858907,"user_tz":240,"elapsed":209,"user":{"displayName":"Ian","userId":"01994031237803856669"}},"outputId":"31285345-0416-4912-b583-cbb7cd66527f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["fraud\n","0    587443\n","1      7200\n","Name: count, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>fraud</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>587443</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>7200</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":8}]},{"cell_type":"markdown","source":["This shows that the number of fraud counts are 7200 while the non fraudulnt counts are 587443."],"metadata":{"id":"X7lQvpWwoqfL"}},{"cell_type":"code","source":["fraud = data[data['fraud']==1]\n","non_fraud = data[data['fraud']==0]\n","\n","print(f\"Shape of Fraudulant transactions: {fraud.shape}\")\n","print(f\"Shape of Non-Fraudulant transactions: {non_fraud.shape}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mM8-bN-rUbgz","executionInfo":{"status":"ok","timestamp":1729205861617,"user_tz":240,"elapsed":198,"user":{"displayName":"Ian","userId":"01994031237803856669"}},"outputId":"10a348e7-7606-4631-d03d-94afbf565814"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Shape of Fraudulant transactions: (7200, 10)\n","Shape of Non-Fraudulant transactions: (587443, 10)\n"]}]},{"cell_type":"code","source":["pd.concat([fraud.amount.describe(), non_fraud.amount.describe()], axis=1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"mDMqYhV3Ydyi","executionInfo":{"status":"ok","timestamp":1729205863589,"user_tz":240,"elapsed":233,"user":{"displayName":"Ian","userId":"01994031237803856669"}},"outputId":"af70a546-091b-4351-ee26-8f49eab70251"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            amount         amount\n","count  7200.000000  587443.000000\n","mean    530.926551      31.847230\n","std     835.587112      31.470876\n","min       0.030000       0.000000\n","25%     159.980000      13.590000\n","50%     319.175000      26.610000\n","75%     548.977500      41.895000\n","max    8329.960000    2144.860000"],"text/html":["\n","  <div id=\"df-7a592083-aece-4163-92b3-16911f4d3c25\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>amount</th>\n","      <th>amount</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>7200.000000</td>\n","      <td>587443.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>530.926551</td>\n","      <td>31.847230</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>835.587112</td>\n","      <td>31.470876</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.030000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>159.980000</td>\n","      <td>13.590000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>319.175000</td>\n","      <td>26.610000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>548.977500</td>\n","      <td>41.895000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>8329.960000</td>\n","      <td>2144.860000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7a592083-aece-4163-92b3-16911f4d3c25')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7a592083-aece-4163-92b3-16911f4d3c25 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7a592083-aece-4163-92b3-16911f4d3c25');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c9533108-ef4f-4bf1-b657-6553ff43c206\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c9533108-ef4f-4bf1-b657-6553ff43c206')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c9533108-ef4f-4bf1-b657-6553ff43c206 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"pd\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"amount\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3432.5249412540697,\n        \"min\": 0.03,\n        \"max\": 8329.96,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          530.9265513888889,\n          319.175,\n          7200.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"amount\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 207578.11495226453,\n        \"min\": 0.0,\n        \"max\": 587443.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          31.847230386607713,\n          26.61,\n          587443.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["pd.concat([fraud.groupby('category')['amount'].mean(),non_fraud.groupby('category')['amount'].mean(),\\\n","           data.groupby('category')['fraud'].mean()*100],keys=[\"Fraudulent\",\"Non-Fraudulent\",\"Percent(%)\"],axis=1,\\\n","          sort=False).sort_values(by=['Non-Fraudulent'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":551},"id":"g1R1FMqvZ0cZ","executionInfo":{"status":"ok","timestamp":1729205866392,"user_tz":240,"elapsed":345,"user":{"displayName":"Ian","userId":"01994031237803856669"}},"outputId":"360f274f-2f2e-4ffa-b683-2c64670e445b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                          Fraudulent  Non-Fraudulent  Percent(%)\n","category                                                        \n","'es_transportation'              NaN       26.958187    0.000000\n","'es_food'                        NaN       37.070405    0.000000\n","'es_hyper'                169.255429       40.037145    4.591669\n","'es_barsandrestaurants'   164.092667       41.145997    1.882944\n","'es_contents'                    NaN       44.547571    0.000000\n","'es_wellnessandbeauty'    229.422535       57.320219    4.759380\n","'es_fashion'              247.008190       62.347674    1.797335\n","'es_leisure'              300.286878       73.230400   94.989980\n","'es_otherservices'        316.469605       75.685497   25.000000\n","'es_sportsandtoys'        345.366811       88.502738   49.525237\n","'es_tech'                 415.274114       99.924638    6.666667\n","'es_health'               407.031338      103.737228   10.512614\n","'es_hotelservices'        421.823339      106.548545   31.422018\n","'es_home'                 457.484834      113.338409   15.206445\n","'es_travel'              2660.802872      669.025533   79.395604"],"text/html":["\n","  <div id=\"df-be893146-8ba2-4372-9731-62afcdb3a377\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Fraudulent</th>\n","      <th>Non-Fraudulent</th>\n","      <th>Percent(%)</th>\n","    </tr>\n","    <tr>\n","      <th>category</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>'es_transportation'</th>\n","      <td>NaN</td>\n","      <td>26.958187</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>'es_food'</th>\n","      <td>NaN</td>\n","      <td>37.070405</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>'es_hyper'</th>\n","      <td>169.255429</td>\n","      <td>40.037145</td>\n","      <td>4.591669</td>\n","    </tr>\n","    <tr>\n","      <th>'es_barsandrestaurants'</th>\n","      <td>164.092667</td>\n","      <td>41.145997</td>\n","      <td>1.882944</td>\n","    </tr>\n","    <tr>\n","      <th>'es_contents'</th>\n","      <td>NaN</td>\n","      <td>44.547571</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>'es_wellnessandbeauty'</th>\n","      <td>229.422535</td>\n","      <td>57.320219</td>\n","      <td>4.759380</td>\n","    </tr>\n","    <tr>\n","      <th>'es_fashion'</th>\n","      <td>247.008190</td>\n","      <td>62.347674</td>\n","      <td>1.797335</td>\n","    </tr>\n","    <tr>\n","      <th>'es_leisure'</th>\n","      <td>300.286878</td>\n","      <td>73.230400</td>\n","      <td>94.989980</td>\n","    </tr>\n","    <tr>\n","      <th>'es_otherservices'</th>\n","      <td>316.469605</td>\n","      <td>75.685497</td>\n","      <td>25.000000</td>\n","    </tr>\n","    <tr>\n","      <th>'es_sportsandtoys'</th>\n","      <td>345.366811</td>\n","      <td>88.502738</td>\n","      <td>49.525237</td>\n","    </tr>\n","    <tr>\n","      <th>'es_tech'</th>\n","      <td>415.274114</td>\n","      <td>99.924638</td>\n","      <td>6.666667</td>\n","    </tr>\n","    <tr>\n","      <th>'es_health'</th>\n","      <td>407.031338</td>\n","      <td>103.737228</td>\n","      <td>10.512614</td>\n","    </tr>\n","    <tr>\n","      <th>'es_hotelservices'</th>\n","      <td>421.823339</td>\n","      <td>106.548545</td>\n","      <td>31.422018</td>\n","    </tr>\n","    <tr>\n","      <th>'es_home'</th>\n","      <td>457.484834</td>\n","      <td>113.338409</td>\n","      <td>15.206445</td>\n","    </tr>\n","    <tr>\n","      <th>'es_travel'</th>\n","      <td>2660.802872</td>\n","      <td>669.025533</td>\n","      <td>79.395604</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-be893146-8ba2-4372-9731-62afcdb3a377')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-be893146-8ba2-4372-9731-62afcdb3a377 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-be893146-8ba2-4372-9731-62afcdb3a377');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-2551cdb8-ceea-4780-a844-7e7a54bc879c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2551cdb8-ceea-4780-a844-7e7a54bc879c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-2551cdb8-ceea-4780-a844-7e7a54bc879c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"          sort=False)\",\n  \"rows\": 15,\n  \"fields\": [\n    {\n      \"column\": \"category\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 15,\n        \"samples\": [\n          \"'es_sportsandtoys'\",\n          \"'es_health'\",\n          \"'es_transportation'\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Fraudulent\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 684.120487819057,\n        \"min\": 164.09266666666664,\n        \"max\": 2660.8028719723184,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          457.48483443708614,\n          421.8233394160584,\n          169.25542857142855\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Non-Fraudulent\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 157.39798640370708,\n        \"min\": 26.958187001478862,\n        \"max\": 669.0255333333333,\n        \"num_unique_values\": 15,\n        \"samples\": [\n          88.50273762376237,\n          103.73722795594654,\n          26.958187001478862\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Percent(%)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 30.183199689867795,\n        \"min\": 0.0,\n        \"max\": 94.98997995991984,\n        \"num_unique_values\": 13,\n        \"samples\": [\n          15.206445115810673,\n          10.512613896981343,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":11}]},{"cell_type":"markdown","source":["This shows in detail which category holds fraudulent and non fraudulent counts.\n","As we can see the travel category has the most counts of fraudulent counts compared to the other counter parts.  "],"metadata":{"id":"jSM6AJEQpGgx"}},{"cell_type":"code","source":["plt.figure(figsize=(30,10))\n","sns.boxplot(x=data.category,y=data.amount)\n","plt.title(\"Boxplot for the Amount spend in category\")\n","plt.ylim(0,4000)\n","plt.legend()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":358},"id":"iPRuP6wPcb5e","executionInfo":{"status":"ok","timestamp":1729205871363,"user_tz":240,"elapsed":2162,"user":{"displayName":"Ian","userId":"01994031237803856669"}},"outputId":"ac668138-0fd8-4496-9d4d-e454d714ad2d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["WARNING:matplotlib.legend:No artists with labels found to put in legend.  Note that artists whose label start with an underscore are ignored when legend() is called with no argument.\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 3000x1000 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["Here we have plotted the finds into a diagram and this is a box plot.\n","This well depicts the finds we were looking for.\n","We can now confirm that the travel category is our outlier and how we are going to deal with this is by dropping this category since we do not want distorted findings/conclusions."],"metadata":{"id":"P5y7fZQ2qRWv"}},{"cell_type":"code","source":["plt.hist(fraud.amount, alpha=0.5, label='fraud',bins=100)\n","plt.hist(non_fraud.amount, alpha=0.5, label='nonfraud',bins=100)\n","plt.title(\"Histogram for fraudulent and nonfraudulent payments\")\n","plt.ylim(0,10000)\n","plt.xlim(0,1000)\n","plt.legend()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":452},"id":"2V02r5y1dn7T","executionInfo":{"status":"ok","timestamp":1729035390276,"user_tz":240,"elapsed":708,"user":{"displayName":"Ian","userId":"01994031237803856669"}},"outputId":"df9a8b73-8ea1-4038-e851-6b6dfc98e56a"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["The diagram above is a histogram.\n","It also depicts the findings of the number of fraudulent and non fraudulent trasanctions that we have in our data set.\n","It looks like the number of fraudulent transactions are more in amount and less in counts."],"metadata":{"id":"yQ6YtimDrpOT"}},{"cell_type":"code","source":["print(\"Unique zipCodeOri values: \",data.zipcodeOri.nunique())\n","print(\"Unique zipMerchant values: \",data.zipMerchant.nunique())\n","# dropping zipcodeori and zipMerchant since they have only one unique value\n","data_reduced = data.drop(['zipcodeOri','zipMerchant'],axis=1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HIdX725NlI04","executionInfo":{"status":"ok","timestamp":1729205910122,"user_tz":240,"elapsed":347,"user":{"displayName":"Ian","userId":"01994031237803856669"}},"outputId":"cd61b979-50d1-4c0c-af27-4f3b8a16685d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Unique zipCodeOri values:  1\n","Unique zipMerchant values:  1\n"]}]},{"cell_type":"code","source":["data_reduced.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kc6plgi6lZ8c","executionInfo":{"status":"ok","timestamp":1729205911531,"user_tz":240,"elapsed":171,"user":{"displayName":"Ian","userId":"01994031237803856669"}},"outputId":"4b49ec0f-bcc4-41dc-8439-0abac4b96883"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['step', 'customer', 'age', 'gender', 'merchant', 'category', 'amount',\n","       'fraud'],\n","      dtype='object')"]},"metadata":{},"execution_count":15}]},{"cell_type":"markdown","source":["Here we shall be reducing the columns since they aree too many and we would need more time to train our models."],"metadata":{"id":"NL4jdz87sK1h"}},{"cell_type":"code","source":["# turning object columns type to categorical for easing the transformation process\n","col_categorical = data_reduced.select_dtypes(include= ['object']).columns\n","for col in col_categorical:\n","    data_reduced[col] = data_reduced[col].astype('category')\n","# categorical values ==> numeric values\n","data_reduced[col_categorical] = data_reduced[col_categorical].apply(lambda x: x.cat.codes)\n","data_reduced.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"XzTjDbiIleBM","executionInfo":{"status":"ok","timestamp":1729205914311,"user_tz":240,"elapsed":565,"user":{"displayName":"Ian","userId":"01994031237803856669"}},"outputId":"f664f256-d8cb-4de6-881b-3762cfa5ea1c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   step  customer  age  gender  merchant  category  amount  fraud\n","0     0       210    4       2        30        12    4.55      0\n","1     0      2753    2       2        30        12   39.68      0\n","2     0      2285    4       1        18        12   26.89      0\n","3     0      1650    3       2        30        12   17.25      0\n","4     0      3585    5       2        30        12   35.72      0"],"text/html":["\n","  <div id=\"df-c65d6a87-babf-48f0-970d-6e4ecdc8dbf4\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>step</th>\n","      <th>customer</th>\n","      <th>age</th>\n","      <th>gender</th>\n","      <th>merchant</th>\n","      <th>category</th>\n","      <th>amount</th>\n","      <th>fraud</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>210</td>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>30</td>\n","      <td>12</td>\n","      <td>4.55</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>2753</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>30</td>\n","      <td>12</td>\n","      <td>39.68</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>2285</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>18</td>\n","      <td>12</td>\n","      <td>26.89</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>1650</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>30</td>\n","      <td>12</td>\n","      <td>17.25</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>3585</td>\n","      <td>5</td>\n","      <td>2</td>\n","      <td>30</td>\n","      <td>12</td>\n","      <td>35.72</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c65d6a87-babf-48f0-970d-6e4ecdc8dbf4')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c65d6a87-babf-48f0-970d-6e4ecdc8dbf4 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c65d6a87-babf-48f0-970d-6e4ecdc8dbf4');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-2a01ca45-501c-4115-a888-16a97bb1982c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2a01ca45-501c-4115-a888-16a97bb1982c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-2a01ca45-501c-4115-a888-16a97bb1982c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data_reduced"}},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["X = data_reduced.drop(['fraud'],axis=1)\n","y = data['fraud']\n","print(X.head(),\"\\n\")\n","print(y.head())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mmMufelJlkvM","executionInfo":{"status":"ok","timestamp":1729205917500,"user_tz":240,"elapsed":210,"user":{"displayName":"Ian","userId":"01994031237803856669"}},"outputId":"46d3b214-39b9-49d3-d8a6-ea5779b37c8e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["   step  customer  age  gender  merchant  category  amount\n","0     0       210    4       2        30        12    4.55\n","1     0      2753    2       2        30        12   39.68\n","2     0      2285    4       1        18        12   26.89\n","3     0      1650    3       2        30        12   17.25\n","4     0      3585    5       2        30        12   35.72 \n","\n","0    0\n","1    0\n","2    0\n","3    0\n","4    0\n","Name: fraud, dtype: int64\n"]}]},{"cell_type":"markdown","source":["This is a definition of our axis that is the X axis the independent variable and y axis the dependent variable or the target variable."],"metadata":{"id":"DAlgwtP3tgHv"}},{"cell_type":"code","source":["y.value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":178},"id":"Oq1e0ebelrC-","executionInfo":{"status":"ok","timestamp":1729205920183,"user_tz":240,"elapsed":203,"user":{"displayName":"Ian","userId":"01994031237803856669"}},"outputId":"b0a149c3-e2a7-4a55-db1b-678c3579d2af"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["fraud\n","0    587443\n","1      7200\n","Name: count, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>fraud</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>587443</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>7200</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":18}]},{"source":["!pip install imbalanced-learn\n","from imblearn.over_sampling import SMOTE\n","\n","smote = SMOTE(random_state=42) # Now SMOTE is defined and can be used\n","X_resampled, y_resampled = smote.fit_resample(X, y)"],"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NxJF61HEmJHV","executionInfo":{"status":"ok","timestamp":1729205928343,"user_tz":240,"elapsed":5365,"user":{"displayName":"Ian","userId":"01994031237803856669"}},"outputId":"ca6247ee-4aea-4ad7-dc2b-2b4b2d7a8963"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: imbalanced-learn in /usr/local/lib/python3.10/dist-packages (0.12.4)\n","Requirement already satisfied: numpy>=1.17.3 in /usr/local/lib/python3.10/dist-packages (from imbalanced-learn) (1.26.4)\n","Requirement already satisfied: scipy>=1.5.0 in /usr/local/lib/python3.10/dist-packages (from imbalanced-learn) (1.13.1)\n","Requirement already satisfied: scikit-learn>=1.0.2 in /usr/local/lib/python3.10/dist-packages (from imbalanced-learn) (1.5.2)\n","Requirement already satisfied: joblib>=1.1.1 in /usr/local/lib/python3.10/dist-packages (from imbalanced-learn) (1.4.2)\n","Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from imbalanced-learn) (3.5.0)\n"]}]},{"cell_type":"code","source":["x_train, x_test, y_train, y_test = train_test_split(X_resampled, y_resampled, test_size=0.2, random_state=42)"],"metadata":{"id":"KVNQ8LPLmP-c"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Here we shall be splitting the dataset into a train set and a test set.\n","This means we want to train our model and test it in regards to our findings."],"metadata":{"id":"2u9X1z_yuE2R"}},{"cell_type":"code","source":["# Function for plotting ROC_AUC curve\n","\n","def plot_roc_auc(y_test, preds):\n","    '''\n","    Takes actual and predicted(probabilities) as input and plots the Receiver\n","    Operating Characteristic (ROC) curve\n","    '''\n","    fpr, tpr, threshold = roc_curve(y_test, preds)\n","    roc_auc = auc(fpr, tpr)\n","    plt.title('Receiver Operating Characteristic')\n","    plt.plot(fpr, tpr, 'b', label = 'AUC = %0.2f' % roc_auc)\n","    plt.legend(loc = 'lower right')\n","    plt.plot([0, 1], [0, 1],'r--')\n","    plt.xlim([0, 1])\n","    plt.ylim([0, 1])\n","    plt.ylabel('True Positive Rate')\n","    plt.xlabel('False Positive Rate')\n","    plt.show()\n"],"metadata":{"id":"Lclu8PP5mmLA"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["At this stage we shall be plotting the ROC-AUC curve.\n","The ROC represents the classification's model performance at different classification threshold while the AUC will be measuring the area under the ROC curve.\n","TPR - stands for true positive rate\n","FPR - stands for false positive rate\n"],"metadata":{"id":"6A5rf8KK_1pq"}},{"source":["# Assuming 'fraud' is your DataFrame containing both fraud and non-fraud data\n","# Create two new DataFrames: one for fraud and one for non-fraud\n","data_fraud = fraud[fraud['fraud'] == 1]  # Assuming 'fraud' is the column indicating fraud\n","data_non_fraud = fraud[fraud['fraud'] == 0]\n","\n","# The base score should be better than predicting always non-fraduelent\n","print(\"Base accuracy score we must beat is: \",\n","      data_non_fraud.fraud.count() / np.add(data_non_fraud.fraud.count(), data_fraud.fraud.count()) * 100)"],"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BG7ilezHvWiI","executionInfo":{"status":"ok","timestamp":1729206517241,"user_tz":240,"elapsed":182,"user":{"displayName":"Ian","userId":"01994031237803856669"}},"outputId":"d213aaff-c650-48f2-85ec-30f424bbaa17"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Base accuracy score we must beat is:  0.0\n"]}]},{"source":["#  KNN Classifier\n","from sklearn.neighbors import KNeighborsClassifier\n","from sklearn.model_selection import train_test_split\n","from sklearn.metrics import classification_report, confusion_matrix\n","# Import necessary functions\n","from sklearn.metrics import roc_curve, auc # Importing roc_curve and auc\n","import matplotlib.pyplot as plt # Importing matplotlib for plotting\n","\n","\n","knn = KNeighborsClassifier(n_neighbors=3,p=1)\n","\n","knn.fit(x_train,y_train)\n","y_pred = knn.predict(x_test)\n","\n","\n","print(\"Classification Report for K-Nearest Neighbours: \\n\", classification_report(y_test, y_pred))\n","print(\"Confusion Matrix of K-Nearest Neigbours: \\n\", confusion_matrix(y_test,y_pred))\n","plot_roc_auc(y_test, knn.predict_proba(x_test)[:,1])"],"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":698},"id":"2swhR8lDxjBK","executionInfo":{"status":"ok","timestamp":1729207124491,"user_tz":240,"elapsed":35185,"user":{"displayName":"Ian","userId":"01994031237803856669"}},"outputId":"1ce616d7-72be-4ff2-cfcf-7ad139aaa169"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Classification Report for K-Nearest Neighbours: \n","               precision    recall  f1-score   support\n","\n","           0       1.00      0.98      0.99    117625\n","           1       0.98      1.00      0.99    117353\n","\n","    accuracy                           0.99    234978\n","   macro avg       0.99      0.99      0.99    234978\n","weighted avg       0.99      0.99      0.99    234978\n","\n","Confusion Matrix of K-Nearest Neigbours: \n"," [[115388   2237]\n"," [   100 117253]]\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["Here we use the KNN classifer to train our test model.\n","As depicted in the diagram above we have an accuracy level of 0.99 which shows/means that we shall get our desired results.\n","The precision score that we get for fraudulent transactions is a good score since it depicts the true proportion of true positives among all the positive predictions.\n","The recall score is also good as it depicts the number/occurences of true positives are correclty predicted by the model.\n","The F1 score is good as it depicts a balance between the precision and recall scores."],"metadata":{"id":"KC8LzkHhCyFx"}},{"cell_type":"code","source":["from sklearn.ensemble import RandomForestClassifier\n","from sklearn.metrics import classification_report, confusion_matrix\n","from sklearn.metrics import roc_curve, auc\n","import matplotlib.pyplot as plt\n","rf_clf = RandomForestClassifier(n_estimators=100,max_depth=8,random_state=42,\n","                                verbose=1,class_weight=\"balanced\")\n","\n","rf_clf.fit(x_train,y_train)\n","y_pred = rf_clf.predict(x_test)\n","\n","print(\"Classification Report for Random Forest Classifier: \\n\", classification_report(y_test, y_pred))\n","print(\"Confusion Matrix of Random Forest Classifier: \\n\", confusion_matrix(y_test,y_pred))\n","plot_roc_auc(y_test, rf_clf.predict_proba(x_test)[:,1])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":750},"id":"cpiN3LZ3yFvF","executionInfo":{"status":"ok","timestamp":1729207954860,"user_tz":240,"elapsed":133662,"user":{"displayName":"Ian","userId":"01994031237803856669"}},"outputId":"40b2dabb-140c-4cb7-a724-36ba6acf7af1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["[Parallel(n_jobs=1)]: Done  49 tasks      | elapsed:  1.1min\n","[Parallel(n_jobs=1)]: Done  49 tasks      | elapsed:    0.8s\n"]},{"output_type":"stream","name":"stdout","text":["Classification Report for Random Forest Classifier: \n","               precision    recall  f1-score   support\n","\n","           0       0.99      0.97      0.98    117625\n","           1       0.97      0.99      0.98    117353\n","\n","    accuracy                           0.98    234978\n","   macro avg       0.98      0.98      0.98    234978\n","weighted avg       0.98      0.98      0.98    234978\n","\n","Confusion Matrix of Random Forest Classifier: \n"," [[113538   4087]\n"," [   760 116593]]\n"]},{"output_type":"stream","name":"stderr","text":["[Parallel(n_jobs=1)]: Done  49 tasks      | elapsed:    0.9s\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["Here we shall be using the Random Forest classifier to train our test model.\n","The RFC uses a collection of individual decision trees where the average vote is selected as the predicted output/result.\n","As seen by the diagram above the accuracy level is 1.\n","The precision score of the fraudulent transactions is 0.97 which is a good sign that our model is responding well and will predict a reasonable outcome.\n","The recall score for fraudulent transactions is 0.99 which means it has correctly predicted the actual positives in the model.\n","The F1 score for fraudulent transactions is 0.98 which shows there is a proper balance between the precision and recall score.  "],"metadata":{"id":"SAKavVYVG5jl"}},{"cell_type":"markdown","source":["                          **CONCLUSION**\n","We have successfully modeled our dataset into one that correctly detects fraudulent transactions.\n","Our dataset is a supervised dataset and so we have used  Classification models that is KNN classifier and Random Forest classifier and the results have been good.\n"],"metadata":{"id":"V0VHO0MxKNOT"}},{"cell_type":"code","source":[],"metadata":{"id":"jf6ON0TiL5TE"},"execution_count":null,"outputs":[]}]}